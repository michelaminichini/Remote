@model List<Template.Web.Features.History.HistoryViewModel>
@{
    ViewData["Title"] = "Storico delle richieste";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">

<div class="container">

    <head>
        <link rel="stylesheet" href="/css/History.css" />
    </head>

    <a href="/" class="text-decoration-none">
        <i class="bi bi-house-door"></i> Torna alla Home
    </a>


    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="title-center">@ViewData["Title"]</h1>
    </div>

    <div class="container-info">
        <div class="profile-img"></div>
        
            <div class="info-details">
                <p><strong>Nome:</strong> @Model.FirstOrDefault()?.Nome</p>
                <p><strong>Nome Team:</strong> @Model.FirstOrDefault()?.NomeTeam</p>
                <p><strong>Ruolo:</strong> @Model.FirstOrDefault()?.Ruolo</p>
                <p><strong>Indirizzo e-mail:</strong> @Model.FirstOrDefault()?.Email</p>
            </div>
    </div>

    <!-- Parte di debug 
    <p>@Model.Count</p>
    <pre>@Html.Raw(Json.Serialize(Model))</pre>  
    <p>Numero di elementi nel modello: @Model?.Count</p> -->

    @*
    Controlla se il modello contiene almeno un elemento con dati validi.
    La condizione verifica che almeno uno degli elementi della lista `Model` abbia
    informazioni significative in almeno uno dei campi.
    `Any()` restituirà `true` se almeno uno degli oggetti nella lista
    soddisfa una delle condizioni sopra indicate. In tal caso, il codice all'interno
    del blocco `if` verrà eseguito.
    Se nessun elemento soddisfa questa condizione, il blocco `else` verrà eseguito.
    *@


    <table class="table table-striped">
        <thead>
            <tr>
                <th>Data della richiesta</th>
                <th>Tipologia</th>
                <th>Data inizio</th>
                <th>Data fine</th>
                <th>Durata</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@(item.DataRichiesta?.ToString("dd/MM/yyyy") ?? "N/A")</td>
                    <td>@(string.IsNullOrEmpty(item.Tipologia?.Trim()) ? "N/A" : item.Tipologia)</td>
                    <td>@(item.DataInizio?.ToString("dd/MM/yyyy") ?? "N/A")</td>
                    <td>@(item.DataFine?.ToString("dd/MM/yyyy") ?? "N/A")</td>
                    <td>@(string.IsNullOrEmpty(item.Durata?.Trim()) ? "N/A" : item.Durata)</td>
                </tr>
            }
        </tbody>
    </table>

    @if (Model == null || !Model.Any(item =>
    item.DataRichiesta.HasValue ||
    !string.IsNullOrWhiteSpace(item.Tipologia) ||
    item.DataInizio.HasValue ||
    item.DataFine.HasValue ||
    item.Durata != "N/A"))

    
    {
        <div class="no-request-text">Non ci sono richieste passate</div>
       
    }
</div>