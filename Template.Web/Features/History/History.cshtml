@model List<Template.Web.Features.History.HistoryViewModel>
@{
    ViewData["Title"] = "Storico delle richieste";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">

<div class="container">

    <head>
        <link rel="stylesheet" href="/css/History.css" />
    </head>

    <a href="/" class="text-decoration-none">
        <i class="bi bi-house-door"></i> Torna alla Home
    </a>


    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="title-center">@ViewData["Title"]</h1>
    </div>

    @foreach(var item in Model){
        <div class="container-info">
            <div class="profile-img">
                <img src="~/@item.Img" alt="Profile Picture" class="img-fluid rounded-circle" />
            </div>
        
            <div class="info-details">
                <p><strong>Nome:</strong> @Model.FirstOrDefault()?.Nome</p>
                <p><strong>Nome Team:</strong> @Model.FirstOrDefault()?.NomeTeam</p>
                <p><strong>Ruolo:</strong> @Model.FirstOrDefault()?.Ruolo</p>
                <p><strong>Indirizzo e-mail:</strong> @Model.FirstOrDefault()?.Email</p>
            </div>
        </div>
    }

    <!-- Parte di debug 
    <p>@Model.Count</p>
    <pre>@Html.Raw(Json.Serialize(Model))</pre>  
    <p>Numero di elementi nel modello: @Model?.Count</p> -->

    <div id="filter-box" class="d-flex mb-4">

        <button class="btn btn-outline-primary" onclick="toggleFilterPanel()">
            <i class="bi bi-filter-left"></i>
        </button>

        <div>
            <div id="filterPanel" class="filter-panel d-none">
                <select id="filterStatus" class="form-select" onchange="applyFilter()">
                    <option value="Tutti">Tutti</option>
                    <option value="Accettata">Accettata</option>
                    <option value="Rifiutata">Rifiutata</option>
                </select>
            </div>
        </div>

        
    </div>


    <table class="table table-striped">
        <thead>
            <tr>
                <th>Data della richiesta</th>
                <th>Tipologia</th>
                <th>Data inizio</th>
                <th>Data fine</th>
                <th>Durata</th>
                <th>Stato</th>
            </tr>
        </thead>
        <tbody id="historyTableBody">
            @foreach (var item in Model)
            {
                <tr class="historyRow" data-stato="@item.Stato">
                    <td>@(item.DataRichiesta?.ToString("dd/MM/yyyy") ?? "N/A")</td>
                    <td>@(string.IsNullOrEmpty(item.Tipologia?.Trim()) ? "N/A" : item.Tipologia)</td>
                    <td>@(item.DataInizio?.ToString("dd/MM/yyyy") ?? "N/A")</td>
                    <td>@(item.DataFine?.ToString("dd/MM/yyyy") ?? "N/A")</td>
                    <td>@(string.IsNullOrEmpty(item.Durata?.Trim()) ? "N/A" : item.Durata)</td>
                    <td>@item.Stato</td>
                </tr>
            }
        </tbody>
    </table>

    @*
    Controlla se il modello è null o se tutti gli elementi nella lista non hanno dati validi (nulli o "N/A").
    Se è vero, mostra il messaggio presente nel div sottostante, che verrà posizionato al di sotto della tabella.

    Dunque, questa condizione assicura che il messaggio venga 
    visualizzato solo quando nessun dato valido è presente nel modello.
    *@

    @if (Model == null || !Model.Any(item =>
    item.DataRichiesta.HasValue || // verifica se DataRichiesta è valorizzato (così per gli altri a seguire)
    !string.IsNullOrWhiteSpace(item.Tipologia) ||
    item.DataInizio.HasValue ||
    item.DataFine.HasValue ||
    item.Durata != "N/A")) // verifica se Durata è diversa da "N/A"

    
    {
        <div class="no-request-text">Non ci sono richieste passate</div>
       
    }
</div>

<script>
    function applyFilter(){
        const selectedStatus = document.getElementById('filterStatus').value;
        const rows = document.querySelectorAll('.historyRow');
        rows.forEach(row => {
            const stato = row.getAttribute('data-stato');
            if (selectedStatus === 'Tutti' || stato === selectedStatus) {
                row.style.display = '';

            } else {
                row.style.display = 'none';
            }
        });
    }

    function toggleFilterPanel() {
        const filterPanel = document.getElementById('filterPanel');
        filterPanel.classList.toggle('d-none');

    }
</script>